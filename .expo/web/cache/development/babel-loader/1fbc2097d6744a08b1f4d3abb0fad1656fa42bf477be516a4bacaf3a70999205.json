{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { workoutService } from \"../services/supabase\";\nimport WorkoutCard from \"../components/WorkoutCard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    workouts = _useState2[0],\n    setWorkouts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var fetchWorkouts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var isRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      try {\n        if (!isRefresh) setLoading(true);\n        var _yield$workoutService = yield workoutService.getPublicWorkouts(20),\n          data = _yield$workoutService.data,\n          error = _yield$workoutService.error;\n        if (error) {\n          console.error(\"Error fetching workouts:\", error);\n          Alert.alert(\"Error\", \"Failed to load workouts\");\n          return;\n        }\n        setWorkouts(data || []);\n      } catch (error) {\n        console.error(\"Error fetching workouts:\", error);\n        Alert.alert(\"Error\", \"Failed to load workouts\");\n      } finally {\n        setLoading(false);\n        if (isRefresh) setRefreshing(false);\n      }\n    });\n    return function fetchWorkouts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchWorkouts(true);\n  }, []);\n  var handleWorkoutLike = function () {\n    var _ref2 = _asyncToGenerator(function* (workoutId) {\n      try {\n        var _yield$workoutService2 = yield workoutService.toggleWorkoutLike(workoutId),\n          error = _yield$workoutService2.error;\n        if (error) {\n          Alert.alert(\"Error\", \"Failed to update like\");\n          return;\n        }\n        yield fetchWorkouts(true);\n      } catch (error) {\n        console.error(\"Error toggling like:\", error);\n        Alert.alert(\"Error\", \"Failed to update like\");\n      }\n    });\n    return function handleWorkoutLike(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    fetchWorkouts();\n  }, []));\n  var renderWorkout = function renderWorkout(_ref3) {\n    var item = _ref3.item;\n    return _jsx(WorkoutCard, {\n      workout: item,\n      onLike: function onLike() {\n        return handleWorkoutLike(item.id);\n      },\n      showUserInfo: true\n    });\n  };\n  var renderEmptyState = function renderEmptyState() {\n    return _jsxs(View, {\n      style: styles.emptyState,\n      children: [_jsx(Text, {\n        style: styles.emptyStateIcon,\n        children: \"\\uD83C\\uDFCB\\uFE0F\"\n      }), _jsx(Text, {\n        style: styles.emptyStateTitle,\n        children: \"No Workouts Yet\"\n      }), _jsxs(Text, {\n        style: styles.emptyStateText,\n        children: [\"Be the first to share a workout! \", \"\\n\", \"Go to \\\"My Workouts\\\" to add your first workout.\"]\n      })]\n    });\n  };\n  if (loading) {\n    return _jsx(LoadingSpinner, {});\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: workouts,\n      renderItem: renderWorkout,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.listContainer,\n      showsVerticalScrollIndicator: false,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: \"#007AFF\"\n      }),\n      ListEmptyComponent: renderEmptyState\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f9fa\"\n  },\n  listContainer: {\n    padding: 16,\n    paddingBottom: 32\n  },\n  emptyState: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 60,\n    paddingHorizontal: 40\n  },\n  emptyStateIcon: {\n    fontSize: 48,\n    marginBottom: 16\n  },\n  emptyStateTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: 8,\n    textAlign: \"center\"\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: \"#666\",\n    textAlign: \"center\",\n    lineHeight: 22\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","View","FlatList","StyleSheet","RefreshControl","Text","Alert","useFocusEffect","workoutService","WorkoutCard","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","workouts","setWorkouts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","fetchWorkouts","_ref","_asyncToGenerator","isRefresh","arguments","length","undefined","_yield$workoutService","getPublicWorkouts","data","error","console","alert","apply","onRefresh","handleWorkoutLike","_ref2","workoutId","_yield$workoutService2","toggleWorkoutLike","_x","renderWorkout","_ref3","item","workout","onLike","id","showUserInfo","renderEmptyState","style","styles","emptyState","children","emptyStateIcon","emptyStateTitle","emptyStateText","container","renderItem","keyExtractor","contentContainerStyle","listContainer","showsVerticalScrollIndicator","refreshControl","tintColor","ListEmptyComponent","create","flex","backgroundColor","padding","paddingBottom","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","marginBottom","fontWeight","color","textAlign","lineHeight"],"sources":["C:/Users/froel/Downloads/Programming Projects/GymApp/src/screens/HomeScreen.tsx"],"sourcesContent":["// src/screens/HomeScreen.tsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  StyleSheet,\r\n  RefreshControl,\r\n  Text,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\n\r\nimport { workoutService } from \"../services/supabase\";\r\nimport { Workout } from \"../types/database\";\r\nimport WorkoutCard from \"../components/WorkoutCard\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nexport default function HomeScreen() {\r\n  const [workouts, setWorkouts] = useState<Workout[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const fetchWorkouts = async (isRefresh = false) => {\r\n    try {\r\n      if (!isRefresh) setLoading(true);\r\n\r\n      const { data, error } = await workoutService.getPublicWorkouts(20);\r\n\r\n      if (error) {\r\n        console.error(\"Error fetching workouts:\", error);\r\n        Alert.alert(\"Error\", \"Failed to load workouts\");\r\n        return;\r\n      }\r\n\r\n      setWorkouts((data || []) as unknown as Workout[]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching workouts:\", error);\r\n      Alert.alert(\"Error\", \"Failed to load workouts\");\r\n    } finally {\r\n      setLoading(false);\r\n      if (isRefresh) setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    fetchWorkouts(true);\r\n  }, []);\r\n\r\n  const handleWorkoutLike = async (workoutId: string) => {\r\n    try {\r\n      const { error } = await workoutService.toggleWorkoutLike(workoutId);\r\n      if (error) {\r\n        Alert.alert(\"Error\", \"Failed to update like\");\r\n        return;\r\n      }\r\n\r\n      // Refresh the list to show updated like count\r\n      await fetchWorkouts(true);\r\n    } catch (error) {\r\n      console.error(\"Error toggling like:\", error);\r\n      Alert.alert(\"Error\", \"Failed to update like\");\r\n    }\r\n  };\r\n\r\n  // Fetch workouts when screen focuses\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      fetchWorkouts();\r\n    }, [])\r\n  );\r\n\r\n  const renderWorkout = ({ item }: { item: Workout }) => (\r\n    <WorkoutCard\r\n      workout={item}\r\n      onLike={() => handleWorkoutLike(item.id)}\r\n      showUserInfo={true}\r\n    />\r\n  );\r\n\r\n  const renderEmptyState = () => (\r\n    <View style={styles.emptyState}>\r\n      <Text style={styles.emptyStateIcon}>üèãÔ∏è</Text>\r\n      <Text style={styles.emptyStateTitle}>No Workouts Yet</Text>\r\n      <Text style={styles.emptyStateText}>\r\n        Be the first to share a workout! {\"\\n\"}\r\n        Go to \"My Workouts\" to add your first workout.\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={workouts}\r\n        renderItem={renderWorkout}\r\n        keyExtractor={(item) => item.id}\r\n        contentContainerStyle={styles.listContainer}\r\n        showsVerticalScrollIndicator={false}\r\n        refreshControl={\r\n          <RefreshControl\r\n            refreshing={refreshing}\r\n            onRefresh={onRefresh}\r\n            tintColor=\"#007AFF\"\r\n          />\r\n        }\r\n        ListEmptyComponent={renderEmptyState}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f8f9fa\",\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n    paddingBottom: 32,\r\n  },\r\n  emptyState: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 60,\r\n    paddingHorizontal: 40,\r\n  },\r\n  emptyStateIcon: {\r\n    fontSize: 48,\r\n    marginBottom: 16,\r\n  },\r\n  emptyStateTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\",\r\n    marginBottom: 8,\r\n    textAlign: \"center\",\r\n  },\r\n  emptyStateText: {\r\n    fontSize: 16,\r\n    color: \"#666\",\r\n    textAlign: \"center\",\r\n    lineHeight: 22,\r\n  },\r\n});\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAaC,WAAW,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAShE,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,cAAc;AAEvB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1D,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAAC,SAAA,GAAgCjB,QAAQ,CAAY,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA8BtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAoC1B,QAAQ,CAAC,KAAK,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAA6B;MAAA,IAAtBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAC5C,IAAI;QACF,IAAI,CAACD,SAAS,EAAER,UAAU,CAAC,IAAI,CAAC;QAEhC,IAAAY,qBAAA,SAA8B5B,cAAc,CAAC6B,iBAAiB,CAAC,EAAE,CAAC;UAA1DC,IAAI,GAAAF,qBAAA,CAAJE,IAAI;UAAEC,KAAK,GAAAH,qBAAA,CAALG,KAAK;QAEnB,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDjC,KAAK,CAACmC,KAAK,CAAC,OAAO,EAAE,yBAAyB,CAAC;UAC/C;QACF;QAEArB,WAAW,CAAEkB,IAAI,IAAI,EAA2B,CAAC;MACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDjC,KAAK,CAACmC,KAAK,CAAC,OAAO,EAAE,yBAAyB,CAAC;MACjD,CAAC,SAAS;QACRjB,UAAU,CAAC,KAAK,CAAC;QACjB,IAAIQ,SAAS,EAAEJ,aAAa,CAAC,KAAK,CAAC;MACrC;IACF,CAAC;IAAA,gBApBKC,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAT,SAAA;IAAA;EAAA,GAoBlB;EAED,IAAMU,SAAS,GAAG3C,WAAW,CAAC,YAAM;IAClC4B,aAAa,CAAC,IAAI,CAAC;IACnBC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMe,iBAAiB;IAAA,IAAAC,KAAA,GAAAd,iBAAA,CAAG,WAAOe,SAAiB,EAAK;MACrD,IAAI;QACF,IAAAC,sBAAA,SAAwBvC,cAAc,CAACwC,iBAAiB,CAACF,SAAS,CAAC;UAA3DP,KAAK,GAAAQ,sBAAA,CAALR,KAAK;QACb,IAAIA,KAAK,EAAE;UACTjC,KAAK,CAACmC,KAAK,CAAC,OAAO,EAAE,uBAAuB,CAAC;UAC7C;QACF;QAGA,MAAMZ,aAAa,CAAC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CjC,KAAK,CAACmC,KAAK,CAAC,OAAO,EAAE,uBAAuB,CAAC;MAC/C;IACF,CAAC;IAAA,gBAdKG,iBAAiBA,CAAAK,EAAA;MAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAT,SAAA;IAAA;EAAA,GActB;EAGD1B,cAAc,CACZP,WAAW,CAAC,YAAM;IAChB6B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CACP,CAAC;EAED,IAAMqB,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAC3BxC,IAAA,CAACH,WAAW;MACV4C,OAAO,EAAED,IAAK;MACdE,MAAM,EAAE,SAARA,MAAMA,CAAA;QAAA,OAAQV,iBAAiB,CAACQ,IAAI,CAACG,EAAE,CAAC;MAAA,CAAC;MACzCC,YAAY,EAAE;IAAK,CACpB,CAAC;EAAA,CACH;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;IAAA,OACpB3C,KAAA,CAACb,IAAI;MAACyD,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAC,QAAA,GAC7BjD,IAAA,CAACP,IAAI;QAACqD,KAAK,EAAEC,MAAM,CAACG,cAAe;QAAAD,QAAA,EAAC;MAAG,CAAM,CAAC,EAC9CjD,IAAA,CAACP,IAAI;QAACqD,KAAK,EAAEC,MAAM,CAACI,eAAgB;QAAAF,QAAA,EAAC;MAAe,CAAM,CAAC,EAC3D/C,KAAA,CAACT,IAAI;QAACqD,KAAK,EAAEC,MAAM,CAACK,cAAe;QAAAH,QAAA,GAAC,mCACD,EAAC,IAAI,EAAC,kDAEzC;MAAA,CAAM,CAAC;IAAA,CACH,CAAC;EAAA,CACR;EAED,IAAItC,OAAO,EAAE;IACX,OAAOX,IAAA,CAACF,cAAc,IAAE,CAAC;EAC3B;EAEA,OACEE,IAAA,CAACX,IAAI;IAACyD,KAAK,EAAEC,MAAM,CAACM,SAAU;IAAAJ,QAAA,EAC5BjD,IAAA,CAACV,QAAQ;MACPoC,IAAI,EAAEnB,QAAS;MACf+C,UAAU,EAAEhB,aAAc;MAC1BiB,YAAY,EAAE,SAAdA,YAAYA,CAAGf,IAAI;QAAA,OAAKA,IAAI,CAACG,EAAE;MAAA,CAAC;MAChCa,qBAAqB,EAAET,MAAM,CAACU,aAAc;MAC5CC,4BAA4B,EAAE,KAAM;MACpCC,cAAc,EACZ3D,IAAA,CAACR,cAAc;QACbuB,UAAU,EAAEA,UAAW;QACvBgB,SAAS,EAAEA,SAAU;QACrB6B,SAAS,EAAC;MAAS,CACpB,CACF;MACDC,kBAAkB,EAAEhB;IAAiB,CACtC;EAAC,CACE,CAAC;AAEX;AAEA,IAAME,MAAM,GAAGxD,UAAU,CAACuE,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDP,aAAa,EAAE;IACbQ,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE;EACjB,CAAC;EACDlB,UAAU,EAAE;IACVmB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDpB,cAAc,EAAE;IACdqB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDrB,eAAe,EAAE;IACfoB,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,MAAM;IACbF,YAAY,EAAE,CAAC;IACfG,SAAS,EAAE;EACb,CAAC;EACDvB,cAAc,EAAE;IACdmB,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}