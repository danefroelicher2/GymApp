{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport AuthScreen from \"../screens/AuthScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport WorkoutsScreen from \"../screens/WorkoutsScreen\";\nimport FollowingScreen from \"../screens/FollowingScreen\";\nimport UserProfileScreen from \"../screens/UserProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction ProfileStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"ProfileMain\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"UserProfile\",\n      component: UserProfileScreen,\n      options: function options(_ref) {\n        var _route$params;\n        var route = _ref.route;\n        return {\n          title: ((_route$params = route.params) == null ? void 0 : _route$params.username) || \"User Profile\",\n          headerBackTitle: \"Back\"\n        };\n      }\n    })]\n  });\n}\nfunction SearchStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"SearchMain\",\n      component: SearchScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"UserProfile\",\n      component: UserProfileScreen,\n      options: function options(_ref2) {\n        var _route$params2;\n        var route = _ref2.route;\n        return {\n          title: ((_route$params2 = route.params) == null ? void 0 : _route$params2.username) || \"User Profile\",\n          headerBackTitle: \"Back\"\n        };\n      }\n    })]\n  });\n}\nfunction MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Following\") {\n            iconName = focused ? \"people\" : \"people-outline\";\n          } else if (route.name === \"Workouts\") {\n            iconName = focused ? \"barbell\" : \"barbell-outline\";\n          } else if (route.name === \"Search\") {\n            iconName = focused ? \"search\" : \"search-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"person\" : \"person-outline\";\n          } else {\n            iconName = \"ellipse-outline\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#007AFF\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarStyle: {\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60\n        },\n        headerStyle: {\n          backgroundColor: \"#007AFF\"\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\"\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: \"üèãÔ∏è GymTracker\",\n        headerStyle: {\n          backgroundColor: \"#007AFF\"\n        },\n        headerTintColor: \"#fff\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Following\",\n      component: FollowingScreen,\n      options: {\n        title: \"Following\",\n        headerStyle: {\n          backgroundColor: \"#007AFF\"\n        },\n        headerTintColor: \"#fff\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Workouts\",\n      component: WorkoutsScreen,\n      options: {\n        title: \"My Workouts\",\n        headerStyle: {\n          backgroundColor: \"#007AFF\"\n        },\n        headerTintColor: \"#fff\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: SearchStack,\n      options: {\n        title: \"Search\",\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileStack,\n      options: {\n        title: \"Profile\",\n        headerShown: false\n      }\n    })]\n  });\n}\nexport default function AppNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    loading = _useAuth.loading;\n  if (loading) {\n    return _jsx(LoadingSpinner, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: user ? _jsx(MainTabs, {}) : _jsx(AuthScreen, {})\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Ionicons","useAuth","LoadingSpinner","AuthScreen","HomeScreen","ProfileScreen","SearchScreen","WorkoutsScreen","FollowingScreen","UserProfileScreen","jsx","_jsx","jsxs","_jsxs","Tab","Stack","ProfileStack","Navigator","children","Screen","name","component","options","headerShown","_ref","_route$params","route","title","params","username","headerBackTitle","SearchStack","_ref2","_route$params2","MainTabs","screenOptions","_ref3","tabBarIcon","_ref4","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","paddingTop","height","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","AppNavigator","_useAuth","user","loading"],"sources":["C:/Users/froel/Downloads/Programming Projects/GymApp/src/navigation/AppNavigator.tsx"],"sourcesContent":["// src/navigation/AppNavigator.tsx\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\n// Import screens\r\nimport AuthScreen from \"../screens/AuthScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport SearchScreen from \"../screens/SearchScreen\";\r\nimport WorkoutsScreen from \"../screens/WorkoutsScreen\";\r\nimport FollowingScreen from \"../screens/FollowingScreen\";\r\nimport UserProfileScreen from \"../screens/UserProfileScreen\";\r\n\r\n// Define navigation param types\r\nexport type RootStackParamList = {\r\n  ProfileMain: undefined;\r\n  UserProfile: { userId: string; username?: string };\r\n  SearchMain: undefined;\r\n};\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\n// Stack navigator for profile-related screens\r\nfunction ProfileStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"ProfileMain\"\r\n        component={ProfileScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"UserProfile\"\r\n        component={UserProfileScreen}\r\n        options={({ route }) => ({\r\n          title: route.params?.username || \"User Profile\",\r\n          headerBackTitle: \"Back\",\r\n        })}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n// Stack navigator for search-related screens\r\nfunction SearchStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"SearchMain\"\r\n        component={SearchScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"UserProfile\"\r\n        component={UserProfileScreen}\r\n        options={({ route }) => ({\r\n          title: route.params?.username || \"User Profile\",\r\n          headerBackTitle: \"Back\",\r\n        })}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n// Main tab navigator for authenticated users\r\nfunction MainTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName: keyof typeof Ionicons.glyphMap;\r\n\r\n          if (route.name === \"Home\") {\r\n            iconName = focused ? \"home\" : \"home-outline\";\r\n          } else if (route.name === \"Following\") {\r\n            iconName = focused ? \"people\" : \"people-outline\";\r\n          } else if (route.name === \"Workouts\") {\r\n            iconName = focused ? \"barbell\" : \"barbell-outline\";\r\n          } else if (route.name === \"Search\") {\r\n            iconName = focused ? \"search\" : \"search-outline\";\r\n          } else if (route.name === \"Profile\") {\r\n            iconName = focused ? \"person\" : \"person-outline\";\r\n          } else {\r\n            iconName = \"ellipse-outline\";\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: \"#007AFF\",\r\n        tabBarInactiveTintColor: \"gray\",\r\n        tabBarStyle: {\r\n          paddingBottom: 5,\r\n          paddingTop: 5,\r\n          height: 60,\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: \"#007AFF\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: \"üèãÔ∏è GymTracker\",\r\n          headerStyle: {\r\n            backgroundColor: \"#007AFF\",\r\n          },\r\n          headerTintColor: \"#fff\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Following\"\r\n        component={FollowingScreen}\r\n        options={{\r\n          title: \"Following\",\r\n          headerStyle: {\r\n            backgroundColor: \"#007AFF\",\r\n          },\r\n          headerTintColor: \"#fff\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Workouts\"\r\n        component={WorkoutsScreen}\r\n        options={{\r\n          title: \"My Workouts\",\r\n          headerStyle: {\r\n            backgroundColor: \"#007AFF\",\r\n          },\r\n          headerTintColor: \"#fff\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Search\"\r\n        component={SearchStack}\r\n        options={{\r\n          title: \"Search\",\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileStack}\r\n        options={{\r\n          title: \"Profile\",\r\n          headerShown: false,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// Main app navigator\r\nexport default function AppNavigator() {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {user ? <MainTabs /> : <AuthScreen />}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,OAAO;AAChB,OAAOC,cAAc;AAGrB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAS7D,IAAMC,GAAG,GAAGhB,wBAAwB,CAAC,CAAC;AACtC,IAAMiB,KAAK,GAAGhB,0BAA0B,CAAqB,CAAC;AAG9D,SAASiB,YAAYA,CAAA,EAAG;EACtB,OACEH,KAAA,CAACE,KAAK,CAACE,SAAS;IAAAC,QAAA,GACdP,IAAA,CAACI,KAAK,CAACI,MAAM;MACXC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAEhB,aAAc;MACzBiB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CACjC,CAAC,EACFZ,IAAA,CAACI,KAAK,CAACI,MAAM;MACXC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAEZ,iBAAkB;MAC7Ba,OAAO,EAAE,SAATA,OAAOA,CAAAE,IAAA;QAAA,IAAAC,aAAA;QAAA,IAAKC,KAAK,GAAAF,IAAA,CAALE,KAAK;QAAA,OAAQ;UACvBC,KAAK,EAAE,EAAAF,aAAA,GAAAC,KAAK,CAACE,MAAM,qBAAZH,aAAA,CAAcI,QAAQ,KAAI,cAAc;UAC/CC,eAAe,EAAE;QACnB,CAAC;MAAA;IAAE,CACJ,CAAC;EAAA,CACa,CAAC;AAEtB;AAGA,SAASC,WAAWA,CAAA,EAAG;EACrB,OACElB,KAAA,CAACE,KAAK,CAACE,SAAS;IAAAC,QAAA,GACdP,IAAA,CAACI,KAAK,CAACI,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAEf,YAAa;MACxBgB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CACjC,CAAC,EACFZ,IAAA,CAACI,KAAK,CAACI,MAAM;MACXC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAEZ,iBAAkB;MAC7Ba,OAAO,EAAE,SAATA,OAAOA,CAAAU,KAAA;QAAA,IAAAC,cAAA;QAAA,IAAKP,KAAK,GAAAM,KAAA,CAALN,KAAK;QAAA,OAAQ;UACvBC,KAAK,EAAE,EAAAM,cAAA,GAAAP,KAAK,CAACE,MAAM,qBAAZK,cAAA,CAAcJ,QAAQ,KAAI,cAAc;UAC/CC,eAAe,EAAE;QACnB,CAAC;MAAA;IAAE,CACJ,CAAC;EAAA,CACa,CAAC;AAEtB;AAGA,SAASI,QAAQA,CAAA,EAAG;EAClB,OACErB,KAAA,CAACC,GAAG,CAACG,SAAS;IACZkB,aAAa,EAAE,SAAfA,aAAaA,CAAAC,KAAA;MAAA,IAAKV,KAAK,GAAAU,KAAA,CAALV,KAAK;MAAA,OAAQ;QAC7BW,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA,EAAgC;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAwC;UAE5C,IAAIhB,KAAK,CAACN,IAAI,KAAK,MAAM,EAAE;YACzBsB,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAC9C,CAAC,MAAM,IAAIb,KAAK,CAACN,IAAI,KAAK,WAAW,EAAE;YACrCsB,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UAClD,CAAC,MAAM,IAAIb,KAAK,CAACN,IAAI,KAAK,UAAU,EAAE;YACpCsB,QAAQ,GAAGH,OAAO,GAAG,SAAS,GAAG,iBAAiB;UACpD,CAAC,MAAM,IAAIb,KAAK,CAACN,IAAI,KAAK,QAAQ,EAAE;YAClCsB,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UAClD,CAAC,MAAM,IAAIb,KAAK,CAACN,IAAI,KAAK,SAAS,EAAE;YACnCsB,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UAClD,CAAC,MAAM;YACLG,QAAQ,GAAG,iBAAiB;UAC9B;UAEA,OAAO/B,IAAA,CAACX,QAAQ;YAACoB,IAAI,EAAEsB,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAC/D,CAAC;QACDG,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,WAAW,EAAE;UACXC,aAAa,EAAE,CAAC;UAChBC,UAAU,EAAE,CAAC;UACbC,MAAM,EAAE;QACV,CAAC;QACDC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAC;IAAA,CAAE;IAAAnC,QAAA,GAEHP,IAAA,CAACG,GAAG,CAACK,MAAM;MACTC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEjB,UAAW;MACtBkB,OAAO,EAAE;QACPK,KAAK,EAAE,gBAAgB;QACvBsB,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE;MACnB;IAAE,CACH,CAAC,EACFxC,IAAA,CAACG,GAAG,CAACK,MAAM;MACTC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAEb,eAAgB;MAC3Bc,OAAO,EAAE;QACPK,KAAK,EAAE,WAAW;QAClBsB,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE;MACnB;IAAE,CACH,CAAC,EACFxC,IAAA,CAACG,GAAG,CAACK,MAAM;MACTC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEd,cAAe;MAC1Be,OAAO,EAAE;QACPK,KAAK,EAAE,aAAa;QACpBsB,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE;MACnB;IAAE,CACH,CAAC,EACFxC,IAAA,CAACG,GAAG,CAACK,MAAM;MACTC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEU,WAAY;MACvBT,OAAO,EAAE;QACPK,KAAK,EAAE,QAAQ;QACfJ,WAAW,EAAE;MACf;IAAE,CACH,CAAC,EACFZ,IAAA,CAACG,GAAG,CAACK,MAAM;MACTC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAEL,YAAa;MACxBM,OAAO,EAAE;QACPK,KAAK,EAAE,SAAS;QAChBJ,WAAW,EAAE;MACf;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB;AAGA,eAAe,SAAS+B,YAAYA,CAAA,EAAG;EACrC,IAAAC,QAAA,GAA0BtD,OAAO,CAAC,CAAC;IAA3BuD,IAAI,GAAAD,QAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAErB,IAAIA,OAAO,EAAE;IACX,OAAO9C,IAAA,CAACT,cAAc,IAAE,CAAC;EAC3B;EAEA,OACES,IAAA,CAACd,mBAAmB;IAAAqB,QAAA,EACjBsC,IAAI,GAAG7C,IAAA,CAACuB,QAAQ,IAAE,CAAC,GAAGvB,IAAA,CAACR,UAAU,IAAE;EAAC,CAClB,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}